@model OrderAnydayProject.Models.RegisterViewModel
@{
    ViewBag.Title = "Create User";
}


@if (ViewData["Error"] != null)
{
    <div class="text-red">
        <p><strong>Error:</strong> @ViewData["Error"].ToString()</p>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="text-green" id="fadediv">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <div class="box box-solid box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Create A New Account</h3>
                <div class="box-tools">
                    <p>
                       <i class="fa fa-arrow-left"></i> @Html.ActionLink("Back to Home", "Profile", "Home")
                    </p>
                </div>
            </div>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                
                <hr />
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Username" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "example@email.com" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Retype Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "111-222-3333" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumberConfirmed, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.PhoneNumberConfirmed, new { @class = "form-control", placeholder = "Retype Phone Number" })
                        @Html.ValidationMessageFor(m => m.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Birthdate, new { @class = "col-md-2 control-label" })

                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Birthdate, new { @class = "form-control", placeholder = "MM/DD/YYYY", type = "date" })
                        @Html.ValidationMessageFor(m => m.Birthdate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Department, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(m => m.Department, new { @class = "form-control" })*@
                        @Html.DropDownList("Department", (SelectList)ViewBag.Dept, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Department, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Role", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserRoles", (SelectList)ViewBag.Name, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserRoles, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-default" value="Register" />
                    </div>
                </div>
            }
        </div>
        </div>
    </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <link href="~/Content/jquery-ui.css" rel="stylesheet" />
                @*<script src="~/Content/jquery.js"></script>*@
                <script src="~/Content/jquery-ui.js"></script>
                <script src="~/Content/jquery.min.js"></script>

                <script type="text/javascript">
                    setTimeout(function () {//fades out success message after 5 seconds
                        $('#fadediv').fadeOut('fast');
                    }, 5000); // can set to make a longer or shorter timeout

                    $(function () {
                        $("#txtSearch").autocomplete({
                            source: '@Url.Action("Search", "Search")'
                        });
                    });
                </script>
            }
