@model OrderAnydayProject.Models.Product

@{
    ViewBag.Title = "Add a Product";
}

<div class="row">
    <div class="col-xs-12">
        <div class="box box-solid box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Create Product</h3>
                <div class="box-tools">
                    <p>
                        <i class="fa fa-arrow-left"></i> @Html.ActionLink("Back to List", "Index")
                    </p>
                </div>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Product</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.VendorID, "VendorID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("VendorID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VendorID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Category, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @*@Html.TextBoxFor(m => m.Department, new { @class = "form-control" })*@
                            @Html.DropDownList("Category", (SelectList)ViewBag.Cat, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Date_Added, new { @class = "col-md-2 control-label" })

                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Date_Added, new { @class = "form-control", placeholder = "MM/DD/YYYY", type = "date" })
                            @Html.ValidationMessageFor(model => model.Date_Added, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Discontinued, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Discontinued)
                                @Html.ValidationMessageFor(model => model.Discontinued, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

         </div>   
      </div>
    </div>
        

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
                <link href="~/Content/jquery-ui.css" rel="stylesheet" />
                @*<script src="~/Content/jquery.js"></script>*@
                <script src="~/Content/jquery-ui.js"></script>
                <script src="~/Content/jquery.min.js"></script>

                <script type="text/javascript">
                    setTimeout(function () {//fades out success message after 5 seconds
                        $('#fadediv').fadeOut('fast');
                    }, 5000); // can set to make a longer or shorter timeout

                    $(function () {
                        $("#txtSearch").autocomplete({
                            source: '@Url.Action("Search", "Search")'
                        });
                    });
                </script>
            }
